'use client'

import { motion } from 'framer-motion'
import { useState, useEffect } from 'react'

interface TextContent {
  id: string
  key: string
  content: string
}

export default function ConstructionArticle() {
  const [texts, setTexts] = useState<Record<string, string>>({})
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const loadTexts = async () => {
      try {
        const response = await fetch('/api/texts')
        const data: TextContent[] = await response.json()
        
        const textsMap = data.reduce((acc, text) => {
          acc[text.key] = text.content
          return acc
        }, {} as Record<string, string>)
        
        setTexts(textsMap)
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤:', error)
      } finally {
        setLoading(false)
      }
    }

    loadTexts()
  }, [])

  const getText = (key: string, fallback: string = '') => {
    return texts[key] || fallback
  }

  if (loading) {
    return <div className="min-h-screen bg-stone-50 flex items-center justify-center md:pl-[18%] pl-[0]">
    <div className="text-center">
      <div className="w-10 h-10 md:w-12 md:h-12 border-4 border-amber-400 border-t-transparent rounded-full animate-spin mx-auto mb-3 md:mb-4"></div>
      <p className="text-stone-600 text-sm md:text-base">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
    </div>
  </div>
  }

  const principles = [
    getText('principle_1', '–°–æ–±–ª—é–¥–µ–Ω–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤'),
    getText('principle_2', '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç'),
    getText('principle_3', '–≠–ª–∏—Ç–Ω—ã–µ –∫–æ—Ç—Ç–µ–¥–∂–∏'),
    getText('principle_4', '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞')
  ]

  const constructionStages = [
    {
      step: getText('stage_1_step', '01'),
      title: getText('stage_1_title', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ'),
      description: getText('stage_1_desc', '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¢–ó –Ω–∞ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –¥–æ–º–∞ —Å –ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∫–æ–π')
    },
    {
      step: getText('stage_2_step', '02'),
      title: getText('stage_2_title', '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'),
      description: getText('stage_2_desc', '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è —Å 3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º')
    },
    {
      step: getText('stage_3_step', '03'),
      title: getText('stage_3_title', '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ'),
      description: getText('stage_3_desc', '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º')
    },
    {
      step: getText('stage_4_step', '04'),
      title: getText('stage_4_title', '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è'),
      description: getText('stage_4_desc', '–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç')
    }
  ]

  const standards = [
    {
      icon: "üìã",
      title: getText('standard_1_title', '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å–º–µ—Ç–∞'),
      description: getText('standard_1_desc', '–ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏')
    },
    {
      icon: "üìù",
      title: getText('standard_2_title', '–î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞'),
      description: getText('standard_2_desc', '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞')
    },
    {
      icon: "üè†",
      title: getText('standard_3_title', '–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ'),
      description: getText('standard_3_desc', '–û—Ç –∑–∞–ª–∏–≤–∫–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç')
    },
    {
      icon: "üé®",
      title: getText('standard_4_title', '–î–∏–∑–∞–π–Ω –∏ –æ—Ç–¥–µ–ª–∫–∞'),
      description: getText('standard_4_desc', '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–º–µ—â–µ–Ω–∏–π –∏ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞')
    },
    {
      icon: "üîß",
      title: getText('standard_5_title', '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏'),
      description: getText('standard_5_desc', '–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º')
    }
  ]

  const additionalOptions = [
    getText('additional_option_1', '–ò–∑—É—á–µ–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤'),
    getText('additional_option_2', '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞'),
    getText('additional_option_3', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
    getText('additional_option_4', '–ü–æ—ç—Ç–∞–ø–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç')
  ]

  return (
    <div className="min-h-screen bg-stone-50 md:py-16 py-8 md:px-4 px-[0] lg:pl-[18%] pl-[0]">
      <div className="max-w-6xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.9 }}
          className="text-center md:mb-16 mb-8 px-4"
        >
          <h1 className="text-2xl md:text-5xl font-light text-stone-800 mb-3 md:mb-4">
            {getText('construction_title', '–°–¢–†–û–ò–¢–ï–õ–¨–°–¢–í–û –î–û–ú–û–í')}
          </h1>
          <div className="w-20 md:w-24 h-1 bg-[#ffe6b6] mx-auto mb-4 md:mb-6"></div>
          <p className="md:text-xl text-sm text-stone-600 max-w-3xl mx-auto leading-relaxed">
            {getText('construction_subtitle', '–°–æ–∑–¥–∞–µ–º –Ω–∞–¥–µ–∂–Ω—ã–µ –¥–æ–º–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤—ã—Å—à–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –≤–∞—à–∏–º –æ–∂–∏–¥–∞–Ω–∏—è–º')}
          </p>
        </motion.div>

        <div className="flex flex-col lg:flex-row gap-8 md:gap-12 items-start">
          
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="lg:w-7/12 space-y-6 md:space-y-10">
            
            {/* –ë–ª–æ–∫ –≤–≤–µ–¥–µ–Ω–∏—è */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="relative"
            >
              <div className="absolute -left-3 top-0 w-1 h-full bg-amber-400"></div>
              <div className="md:pl-6 px-4">
                <p className="md:text-xl text-base leading-relaxed text-stone-700 mb-4 md:mb-6">
                  {getText('intro_text_1', '–ù–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ä—ã–Ω–∫–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–º–ø–∞–Ω–∏–π, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –ø–æ –Ω–∏–∑–∫–∏–º —Ü–µ–Ω–∞–º. –û–¥–Ω–∞–∫–æ –≤—ã–±–æ—Ä –ø–æ–¥—Ä—è–¥—á–∏–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –≤–∑–≤–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.')}
                </p>
                <div className="bg-amber-50 rounded-lg p-3 md:p-4 border border-amber-200">
                  <p className="text-stone-700 italic text-sm md:text-base">
                    {getText('intro_quote', '"–ú—ã —É–±–µ–∂–¥–µ–Ω—ã: –≤–∞–∂–Ω–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∑–¥–∞–Ω–∏–µ, –∞ —Å–æ–∑–¥–∞—Ç—å –Ω–∞–¥–µ–∂–Ω–æ–µ –∂–∏–ª—å–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤—Å–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º."')}
                  </p>
                </div>
              </div>
            </motion.div>

            {/* –ë–ª–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="bg-white p-4 md:p-6 md:rounded-xl rounded-[0] shadow-sm border border-stone-200"
            >
              <div className="flex items-start space-x-3 md:space-x-4 mb-3 md:mb-4">
                <div className="flex-shrink-0">
                  <div className="w-10 h-10 md:w-14 md:h-14 bg-stone-800 rounded-xl flex items-center justify-center">
                    <span className="text-amber-400 text-lg md:text-xl">üèÜ</span>
                  </div>
                </div>
                <div>
                  <h3 className="text-lg md:text-xl font-semibold text-stone-800 mb-1 md:mb-2">
                    {getText('principles_title', '–ù–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã')}
                  </h3>
                  <p className="text-stone-700 text-xs md:text-sm leading-relaxed">
                    {getText('principles_description', '–°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ—Ä–º–∞—Ç–∏–≤—ã, –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω—ã–µ —ç–ª–∏—Ç–Ω—ã–µ –∫–æ—Ç—Ç–µ–¥–∂–∏.')}
                  </p>
                </div>
              </div>
              <div className="grid grid-cols-2 gap-2 md:gap-3 mt-3 md:mt-4">
                {principles.map((principle, index) => (
                  <div key={index} className="flex items-center space-x-1 md:space-x-2">
                    <div className="w-1.5 h-1.5 bg-[#ffe6b6] rounded-full"></div>
                    <span className="text-stone-700 text-xs md:text-sm">{principle}</span>
                  </div>
                ))}
              </div>
            </motion.div>

            {/* –ë–ª–æ–∫ —ç—Ç–∞–ø–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.6 }}
              className="bg-stone-800 md:rounded-xl rounded-[0] md:p-6 p-4 text-amber-50"
            >
              <h3 className="text-xl md:text-2xl font-light mb-3 md:mb-4 text-amber-100">
                {getText('construction_stages_title', '–≠—Ç–∞–ø—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞')}
              </h3>
              <div className="space-y-3 md:space-y-4">
                {constructionStages.map((stage, index) => (
                  <div key={index} className="flex items-start space-x-2 md:space-x-3 p-2 md:p-3 bg-stone-700 rounded-lg">
                    <div className="w-6 h-6 md:w-8 md:h-8 bg-[#ffe6b6] rounded-lg flex items-center justify-center flex-shrink-0">
                      <span className="text-white text-xs md:text-sm font-bold">{stage.step}</span>
                    </div>
                    <div>
                      <h4 className="font-semibold text-amber-100 text-xs md:text-sm mb-1">{stage.title}</h4>
                      <p className="text-amber-100 text-xs opacity-90 leading-relaxed">{stage.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            </motion.div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∞–∫—Ü–µ–Ω—Ç—ã */}
          <div className="lg:w-5/12 space-y-4 md:space-y-6">
            
            {/* –ë–ª–æ–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ */}
            <motion.div
              initial={{ opacity: 0, x: 30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.3 }}
              className="sticky top-6"
            >
              <div className="bg-white md:rounded-xl rounded-[0] md:p-6 p-4 shadow-lg border border-stone-200">
                <div className="text-center mb-4 md:mb-6">
                  <div className="w-10 h-10 md:w-14 md:h-14 bg-amber-100 rounded-xl flex items-center justify-center mx-auto mb-2 md:mb-3">
                    <span className="text-amber-600 text-lg md:text-xl">‚≠êÔ∏è</span>
                  </div>
                  <h2 className="text-lg md:text-xl font-bold text-stone-800">
                    {getText('standards_title', '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞')}
                  </h2>
                  <p className="text-stone-600 mt-1 text-xs md:text-sm">
                    {getText('standards_subtitle', '–ß–µ—Ç–∫–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—Ö–µ–º–∞')}
                  </p>
                </div>

                <div className="space-y-3 md:space-y-4">
                  {standards.map((standard, index) => (
                    <motion.div
                      key={index}
                      whileHover={{ scale: 1.02 }}
                      className="flex items-start space-x-2 md:space-x-3 p-2 md:p-3 bg-amber-50 rounded-lg border border-amber-100"
                    >
                      <div className="w-8 h-8 md:w-10 md:h-10 bg-white rounded-lg flex items-center justify-center flex-shrink-0 shadow-sm">
                        <span className="text-base md:text-lg">{standard.icon}</span>
                      </div>
                      <div>
                        <h4 className="font-semibold text-stone-800 mb-1 text-xs md:text-sm">{standard.title}</h4>
                        <p className="text-stone-600 text-xs leading-relaxed">{standard.description}</p>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>

              {/* –ë–ª–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.7 }}
                className="mt-4 md:mt-6 bg-gradient-to-br from-stone-700 to-stone-800 md:rounded-xl rounded-[0] md:p-6 p-4 text-amber-50"
              >
                <h3 className="text-base md:text-lg font-semibold mb-2 md:mb-3 text-amber-100">
                  {getText('additional_options_title', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏')}
                </h3>
                <div className="space-y-2 md:space-y-3 mb-3 md:mb-4">
                  {additionalOptions.map((option, index) => (
                    <div key={index} className="flex items-center space-x-1 md:space-x-2">
                      <div className="w-1.5 h-1.5 bg-amber-400 rounded-full"></div>
                      <span className="text-amber-100 text-xs md:text-sm">{option}</span>
                    </div>
                  ))}
                </div>
                
                <div className="pt-3 md:pt-4 border-t border-stone-600">
                  <p className="text-amber-200 text-xs md:text-sm mb-2 md:mb-3 text-center">
                    {getText('additional_note', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω–æ–µ –∂–∏–ª—å–µ')}
                  </p>
                  <div className="flex flex-col sm:flex-row gap-2 md:gap-3">
                    <button className="flex-1 bg-[#ffe6b6] text-stone-900 font-medium py-1.5 md:py-2 px-2 md:px-3 rounded-lg hover:bg-amber-400 transition-colors text-xs">
                      {getText('additional_button_1', '–ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã')}
                    </button>
                    <button className="flex-1 bg-transparent border border-amber-400 text-amber-400 font-medium py-1.5 md:py-2 px-2 md:px-3 rounded-lg hover:bg-amber-400 hover:text-stone-900 transition-colors text-xs">
                      {getText('additional_button_2', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç')}
                    </button>
                  </div>
                </div>
              </motion.div>
            </motion.div>
          </div>
        </div>

        {/* –§—É—Ç–µ—Ä CTA */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.9 }}
          className="md:mt-16 mt-8 text-center"
        >
          <div className="bg-white md:rounded-xl rounded-[0] md:p-8 p-6 shadow-sm border border-stone-200 max-w-3xl mx-auto">
            <h3 className="text-xl md:text-2xl font-light text-stone-800 mb-3">
              {getText('cta_title', '–ù–∞—á–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ –¥–æ–º–∞')}
            </h3>
            <p className="text-stone-600 text-sm md:text-base mb-4 md:mb-6 max-w-2xl mx-auto leading-relaxed">
              {getText('cta_description', '–ü–æ—ç—Ç–∞–ø–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç –æ—Ç –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ—Ç–¥–µ–ª–∫–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω–æ–≥–æ –∂–∏–ª—å—è.')}
            </p>
            <div className="flex flex-col sm:flex-row gap-3 justify-center">
              <a href="/contacts" className='w-full'>
              <button className="w-full bg-stone-800 text-amber-50 font-medium py-2.5 md:py-3 px-4 md:px-6 rounded-lg hover:bg-stone-700 transition-colors text-sm">
                {getText('cta_button_primary', '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é')}
              </button>
              </a>
              <a href="/catalog" className='w-full'>
              <button className="w-full border border-stone-800 text-stone-800 font-medium py-2.5 md:py-3 px-4 md:px-6 rounded-lg hover:bg-stone-800 hover:text-amber-50 transition-colors text-sm">
                {getText('cta_button_secondary', '–°–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã')}
              </button>
              </a>
            </div>
          </div>
        </motion.div>
      </div>
    </div>
  )
}